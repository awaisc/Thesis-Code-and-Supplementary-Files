scale_x_continuous(limits = c(0, 2000000))+
theme_bw()
dataFrameDistance1SpacePromoter
dataFrameDistance1SpacePromoter[dataFrameDistance1SpacePromoter$distance==0]
dataFrameDistance1SpacePromoter[dataFrameDistance1SpacePromoter$distance==0,]
test
head(test)
ggplot(ggplotdataFrameDistanceofTandemMotifsFromPromoter, aes(x=score, group=Space, fill=Space))+
geom_freqpoly(binwidth = 10000)+
xlab(label = "Distance(Base Pairs)")+
scale_x_continuous(limits = c(0, 2000000))+
theme_bw()
dataFrameMerger<-function(z,x,c,v){
test<-merge(z[3],x[3],by=0, all=TRUE, row.names=NULL)
test2<-merge(test, c[3], by=0, all=TRUE, row.names=NULL)
test3<- merge(test2, v[3], by=0,all=TRUE, row.names=NULL)
return(test3)
}
dataFrameDistanceofTandemMotifsFromPromoter<-dataFrameMerger(dataFrameDistance1SpacePromoter,dataFrameDistance2SpacePromoter, dataFrameDistance3SpacePromoter, dataFrameDistance4SpacePromoter)
dataFrameDistanceofTandemMotifsFromPromoter<-dataFrameDistanceofTandemMotifsFromPromoter[4:7]
colnames(dataFrameDistanceofTandemMotifsFromPromoter)<- c("1 Space",
"2 Space",
"3 Space",
"4 Space")
ggplotdataFrameDistanceofTandemMotifsFromPromoter<-reshape(dataFrameDistanceofTandemMotifsFromPromoter,
varying = c("1 Space", "2 Space", "3 Space", "4 Space"),
v.names = "score",
timevar = "Space",
times = c("1 Nucleotide", "2 Nucleotide", "3 Nucleotide", "4 Nucleotide"),
direction = "long")
dataFrameDistancePlandromic1SpacePromoter  <-distanceToNearest(grangeplaindromic1space, promoters) %>% as.data.frame
dataFrameDistancePlandromic2SpacePromoter <-
distanceToNearest(grangeplaindromic2space, promoters) %>% as.data.frame
dataFrameDistancePlandromic3SpacePromoter <-
distanceToNearest(grangeplaindromic3space, promoters) %>% as.data.frame
dataFrameDistancePlandromic4SpacePromoter <-
distanceToNearest(grangeplaindromic4space, promoters) %>% as.data.frame
head(dataFrameDistancePlandromic4SpacePromoter)
dataFrameDistanceofPlandromicMotifsFromPromoter <- dataFrameMerger(dataFrameDistancePlandromic1SpacePromoter,
dataFrameDistancePlandromic2SpacePromoter,
dataFrameDistancePlandromic3SpacePromoter,
dataFrameDistancePlandromic4SpacePromoter)
colnames(dataFrameDistanceofPlandromicMotifsFromPromoter)<- c("1 Space",
"2 Space",
"3 Space",
"4 Space")
ggplotdataFrameDistanceofTandemMotifsFromPromoter<-reshape(dataFrameDistanceofPlandromicMotifsFromPromoter,
varying = c("1 Space", "2 Space", "3 Space", "4 Space"),
v.names = "score",
timevar = "Space",
times = c("1 Nucleotide", "2 Nucleotide", "3 Nucleotide", "4 Nucleotide"),
direction = "long")
head(ggplotdataFrameDistanceofTandemMotifsFromPromoter)
head(ggplotdataFrameDistanceofTandemMotifsFromPromoter)
ggplotdataFrameDistanceofTandemMotifsFromPromoter<-reshape(dataFrameDistanceofTandemMotifsFromPromoter,
varying = c("1 Space", "2 Space", "3 Space", "4 Space"),
v.names = "score",
timevar = "Space",
times = c("1 Nucleotide", "2 Nucleotide", "3 Nucleotide", "4 Nucleotide"),
direction = "long")
head(ggplotdataFrameDistanceofTandemMotifsFromPromoter)
(head)
head(dataFrameDistancePlandromic4SpacePromoter)
head(dataFrameDistancePlandromic3SpacePromoter)
head(dataFrameDistanceofPlandromicMotifsFromPromoter)
dataFrameDistanceofPlandromicMotifsFromPromoter<-dataFrameDistanceofPlandromicMotifsFromPromoter[4:7]
colnames(dataFrameDistanceofPlandromicMotifsFromPromoter)<- c("1 Space",
"2 Space",
"3 Space",
"4 Space")
head(dataFrameDistanceofPlandromicMotifsFromPromoter)
ggplotdataFrameDistanceofPlaindromicMotifsFromPromoter<-reshape(dataFrameDistanceofPlandromicMotifsFromPromoter,
varying = c("1 Space", "2 Space", "3 Space", "4 Space"),
v.names = "score",
timevar = "Space",
times = c("1 Nucleotide", "2 Nucleotide", "3 Nucleotide", "4 Nucleotide"),
direction = "long")
head(ggplotdataFrameDistanceofPlaindromicMotifsFromPromoter)
ggplot(ggplotdataFrameDistanceofPlaindromicMotifsFromPromoter, aes(x=score, group=Space, fill=Space))+
geom_freqpoly(binwidth = 10000)+
xlab(label = "Distance(Base Pairs)")+
scale_x_continuous(limits = c(0, 2000000))+
theme_bw()
library(seqLogo)
library(magrittr)
library(GenomicRanges)
library(ggplot2)
library(magrittr)
library(tibble)
library(pander)
library(reshape2)
library(plyr)
library(MotifDb)
library(BSgenome.Mmusculus.UCSC.mm9)
arx6MerPWM1space <-
rbind(
A = c(0, 1, 1, 0, 0, 1),
C = c(0, 0, 0, 0, 0, 0),
G = c(0, 0, 0, 0, 0, 0) ,
T = c(1, 0, 0, 1, 1, 0)
)
arx6Mer <-
rbind(
A = c(0, 1, 1, 0, 0, 1),
C = c(0, 0, 0, 0, 0, 0),
G = c(0, 0, 0, 0, 0, 0) ,
T = c(1, 0, 0, 1, 1, 0)
)
seqLogo(arx6Mer)
seqLogo::seqLogo(arx6Mer)
arx6MerPlaindrome<-
rbind(
A = c(1, 0, 0, 1, 1, 0),
C = c(0, 0, 0, 0, 0, 0),
G = c(0, 0, 0, 0, 0, 0) ,
T = c(0, 1, 1, 0, 0, 1)
)
arx6MerPlaindrome<-
rbind(
A = c(1, 0, 0, 1, 1, 0),
C = c(0, 0, 0, 0, 0, 0),
G = c(0, 0, 0, 0, 0, 0) ,
T = c(0, 1, 1, 0, 0, 1)
)
seqLogo::seqLogo(arx6MerPlaindrome)
grange6mer<-matchPWM(arx6Mer, BSgenome.Mmusculus.UCSC.mm9, "100%")
grange6merplaindrome<-matchPwM(arx6MerPlaindrome, BSgenome.Mmusculus.UCSC.mm9, "100%")
arx6MerPlaindrome
grange6mer
grange6merplaindrome
grange6merplaindrome<-matchPwM(arx6MerPlaindrome, BSgenome.Mmusculus.UCSC.mm9, "100%")
grange6merplaindrome<-matchPWM(arx6MerPlaindrome, BSgenome.Mmusculus.UCSC.mm9, "100%")
grange6merplaindrome
subset(grange6mer, strand=="+")
grange6merPlus<-subset(grange6mer, strand=="+")
grange6merMinus<-subset(grange6mer, strand=="-")
grange6merPlus<-subset(grange6mer, strand=="+")
distanceToNearest(grange6merPlus,grange6merMinus)
grange6merPlus
grange6merMinus
distanceToNearest(grange6merPlus,grange6merMinus)
distanceToNearest(grange6mer)
test<-distanceToNearest(grange6mer)
subset(test, distance<=200)
subset(test, distance<=200)%>%countRnodeHits()
grangeplaindromic1space <-
matchPWM(arx6MerPWM1space, BSgenome.Mmusculus.UCSC.mm9, "100%")
grangeplaindromic2space <-
matchPWM(arx6MerPWM2space, BSgenome.Mmusculus.UCSC.mm9, "100%")
grangeplaindromic3space <-
matchPWM(arx6MerPWM3space, BSgenome.Mmusculus.UCSC.mm9, "100%")
grangeplaindromic4space <-
matchPWM(arx6MerPWM4space, BSgenome.Mmusculus.UCSC.mm9, "100%")
grangeTandem2space <-
matchPWM(arxTandem2Space, BSgenome.Mmusculus.UCSC.mm9, "100%")
grangeTandem3space <-
matchPWM(arxTandem3Space, BSgenome.Mmusculus.UCSC.mm9, "100%")
grangeTandem4space <-
matchPWM(arxTandem4Space, BSgenome.Mmusculus.UCSC.mm9, "100%")
grangeTandem1space
grangeTandem2space
grangeTandem1space
grangeTandem2space
grangeTandem3space
grangeTandem4space
tandemDataTable <- rbind(
cbind(
numberofTandem1spaceSites <- length(grangeTandem1space),
dataTable1SpaceGenes <-
sum(countOverlaps(grangeTandem1space, UCSCgenes)),
dataTable1SpacePromoters <-
sum(countOverlaps(grangeTandem1space, promoters)),
dataTable1SpaceEnhancer <-
sum(countOverlaps(grangeTandem1space, enhancerGrange))
),
cbind(
numberofTandem2spaceSites <- length(grangeTandem2space),
dataTable2SpaceGenes <-
sum(countOverlaps(grangeTandem2space, UCSCgenes)),
dataTable2SpacePromoters <-
sum(countOverlaps(grangeTandem2space, promoters)),
dataTable2SpaceEnhancer <-
sum(countOverlaps(grangeTandem2space, enhancerGrange))
),
cbind(
numberofTandem3spaceSites <- length(grangeTandem3space),
dataTable3SpaceGenes <-
sum(countOverlaps(grangeTandem3space, UCSCgenes)),
dataTable3SpacePromoters <-
sum(countOverlaps(grangeTandem3space, promoters)),
dataTable3SpaceEnhancer <-
sum(countOverlaps(grangeTandem3space, enhancerGrange))
),
cbind(
numberofTandem4spaceSites <- length(grangeTandem4space),
dataTable4SpaceGenes <-
sum(countOverlaps(grangeTandem4space, UCSCgenes)),
dataTable4SpacePromoters <-
sum(countOverlaps(grangeTandem4space, promoters)),
dataTable4SpaceEnhancer <-
sum(countOverlaps(grangeTandem4space, enhancerGrange))
)
) %>% as.data.frame
colnames(tandemDataTable) <- c("Total",
"Motifs in genes",
"Motifs in promoters",
"Motifs in enhancers")
rownames(tandemDataTable) <- c("1 Space",
"2 Space",
"3 Space",
"4 Space")
tandemDataTable %>% pander()
tandemDataTable <- rownames_to_column(tandemDataTable)
ggplot(tandemDataTable, aes(x = rowname, y = Total)) +
geom_bar(stat = "identity") +
theme_bw()
planindromicDataTable <- rbind(
cbind(
length(grangeplaindromic1space),
Arx6mer <- sum(countOverlaps(grangeplaindromic1space, UCSCgenes)),
sum(countOverlaps(grangeplaindromic1space, promoters)),
sum(countOverlaps(grangeplaindromic1space, enhancerGrange))
),
cbind(
length(grangeplaindromic2space),
sum(countOverlaps(grangeplaindromic2space, UCSCgenes)),
sum(countOverlaps(grangeplaindromic2space, promoters)),
sum(countOverlaps(grangeplaindromic2space, enhancerGrange))
)
,
cbind(
numberOfArxSitesPlaindromic3Space <- length(grangeplaindromic3space),
sum(countOverlaps(grangeplaindromic3space, UCSCgenes)),
sum(countOverlaps(grangeplaindromic3space, promoters)),
sum(countOverlaps(grangeplaindromic4space, enhancerGrange))
),
cbind(
numberOfArxSitesPlaindromic4Space <- length(grangeplaindromic4space),
sum(countOverlaps(grangeplaindromic4space, UCSCgenes)),
sum(countOverlaps(grangeplaindromic4space, promoters)),
sum(countOverlaps(grangeplaindromic4space, enhancerGrange))
)
) %>% as.data.frame()
colnames(planindromicDataTable) <- c("Total",
"Motifs in genes",
"Motifs in Promoters",
"Motifs in Enhancers")
rownames(planindromicDataTable) <- c("1 Space",
"2 Space",
"3 Space",
"4 Space")
planindromicDataTable %>% pander()
grangeplaindromic1space
grangeplaindromic1space <-
matchPWM(arx6MerPWM1space, BSgenome.Mmusculus.UCSC.mm9, "100%")
grangeTandem1space <-
matchPWM(arxTandem1Space, BSgenome.Mmusculus.UCSC.mm9, "100%")
arx6MerPWM1space <-
rbind(
A = c(0, 1, 1, 0, 0, 1, 0.25, 1, 0, 0, 1, 1, 0),
C = c(0, 0, 0, 0, 0, 0, 0.25, 0),
G = c(0, 0, 0, 0, 0, 0, 0.25, 0) ,
T = c(1, 0, 0, 1, 1, 0, 0.25, 0, 1, 1, 0, 0, 1)
)
arx6MerPWM2space <-
rbind(
A = c(0, 1, 1, 0, 0, 1, 0.25, 0.25, 1, 0, 0, 1, 1, 0),
C = c(0, 0, 0, 0, 0, 0, 0.25, 0.25),
G = c(0, 0, 0, 0, 0, 0, 0.25, 0.25, 0) ,
T = c(1, 0, 0, 1, 1, 0, 0.25, 0.25, 0, 1, 1, 0, 0, 1)
)
arx6MerPWM3space <-
rbind(
A = c(0, 1, 1, 0, 0, 1, 0.25, 0.25, 0.25, 1, 0, 0, 1, 1, 0),
C = c(0, 0, 0, 0, 0, 0, 0.25, 0.25, 0.25),
G = c(0, 0, 0, 0, 0, 0, 0.25, 0.25, 0.25, 0) ,
T = c(1, 0, 0, 1, 1, 0, 0.25, 0.25, 0.25, 0, 1, 1, 0, 0, 1)
)
arx6MerPWM4space <-
rbind(
A = c(0, 1, 1, 0, 0, 1, 0.25, 0.25, 0.25, 0.25, 1, 0, 0, 1, 1, 0),
C = c(0, 0, 0, 0, 0, 0, 0.25, 0.25, 0.25, 0.25),
G = c(0, 0, 0, 0, 0, 0, 0.25, 0.25, 0.25, 0.25) ,
T = c(1, 0, 0, 1, 1, 0, 0.25, 0.25, 0.25, 0.25, 0, 1, 1, 0, 0, 1)
)
grangeplaindromic1space <-
matchPWM(arx6MerPWM1space, BSgenome.Mmusculus.UCSC.mm9, "100%")
planindromicDataTable <- rbind(
cbind(
length(grangeplaindromic1space),
Arx6mer <- sum(countOverlaps(grangeplaindromic1space, UCSCgenes)),
sum(countOverlaps(grangeplaindromic1space, promoters)),
sum(countOverlaps(grangeplaindromic1space, enhancerGrange))
),
cbind(
length(grangeplaindromic2space),
sum(countOverlaps(grangeplaindromic2space, UCSCgenes)),
sum(countOverlaps(grangeplaindromic2space, promoters)),
sum(countOverlaps(grangeplaindromic2space, enhancerGrange))
)
,
cbind(
numberOfArxSitesPlaindromic3Space <- length(grangeplaindromic3space),
sum(countOverlaps(grangeplaindromic3space, UCSCgenes)),
sum(countOverlaps(grangeplaindromic3space, promoters)),
sum(countOverlaps(grangeplaindromic4space, enhancerGrange))
),
cbind(
numberOfArxSitesPlaindromic4Space <- length(grangeplaindromic4space),
sum(countOverlaps(grangeplaindromic4space, UCSCgenes)),
sum(countOverlaps(grangeplaindromic4space, promoters)),
sum(countOverlaps(grangeplaindromic4space, enhancerGrange))
)
) %>% as.data.frame()
colnames(planindromicDataTable) <- c("Total",
"Motifs in genes",
"Motifs in Promoters",
"Motifs in Enhancers")
rownames(planindromicDataTable) <- c("1 Space",
"2 Space",
"3 Space",
"4 Space")
planindromicDataTable %>% pander()
planindromicDataTable<-rownames_to_column(planindromicDataTable)
ggplot(planindromicDataTable, aes(x = rowname, y = Total)) +
geom_bar(stat = "identity") +
theme_bw()
arx6Mer <-
rbind(
A = c(0, 1, 1, 0, 0, 1),
C = c(0, 0, 0, 0, 0, 0),
G = c(0, 0, 0, 0, 0, 0) ,
T = c(1, 0, 0, 1, 1, 0)
)
arx6MerPlaindrome<-
rbind(
A = c(1, 0, 0, 1, 1, 0),
C = c(0, 0, 0, 0, 0, 0),
G = c(0, 0, 0, 0, 0, 0) ,
T = c(0, 1, 1, 0, 0, 1)
)
grange6merplaindrome<-matchPWM(arx6MerPlaindrome, BSgenome.Mmusculus.UCSC.mm9, "100%")
grange6merplaindrome<-matchPWM(arx6MerPlaindrome, BSgenome.Mmusculus.UCSC.mm9, "100%")
grange6merplaindrome
grange6merMinus
grange6merPlus
test<-distanceToNearest(grange6merMinus, grange6merPlus)
test
subset(test, distance<=200)%>%countRnodeHits()
test<-findOverlaps(grange6merMinus, grange6merPlus)
test
test<-findOverlaps(grange6mer)
test<-distanceToNearest(grange6mer)
subset(test, distance<=200)%>%countRnodeHits()
intergerforTest<-subset(test, distance<=200)%>%countRnodeHits()
subset(test, intergerforTest)
subset(grange6mer, intergerforTest)
grange6merPlus
grange6merMinus
test<-distanceToNearest(grange6merPlus, grange6merMinus, ignore.strand=TRUE)
test
grange6mer
grange6mer
grange6merPlus
grange6merMinus
test<-distanceToNearest(grange6merPlus, grange6merMinus, ignore.strand=TRUE)
grange6merPlus<-subset(grange6mer, strand=="+")
grange6merMinus<-subset(grange6mer, strand=="-")
test<-distanceToNearest(grange6merPlus, grange6merMinus, ignore.strand=TRUE)
grange6merPlaindromePlus<-subset(grange6merplaindrome, strand =="+")
grange6merPlainDromeMinus<-subset(grange6merplaindrome, strand == "-")
grange6merPlaindromePlus
grange6merPlainDromeMinus
test<-distanceToNearest(grange6merPlus, grange6merPlainDromeMinus, ignore.strand=TRUE)
test
intergerforTest<-subset(test, distance<=200)%>%countRnodeHits()
subset(grange6merPlainDromeMinus, intergerforTest)
test<-findOverlaps(grange6merPlus, grange6merPlainDromeMinus, ignore.strand=TRUE)
test
test<-findOverlaps(grange6merPlus, grange6merPlainDromeMinus, ignore.strand=TRUE, maxgap= 200)
test
test<-distanceToNearest(grange6merPlus, grange6merPlainDromeMinus, ignore.strand=TRUE, maxgap= 200)
grange6merPlainDromeMinus
test<-findOverlaps(grange6merPlus, grange6merPlainDromeMinus, ignore.strand=TRUE, maxgap= 200)
test<-distanceToNearest(grange6merPlus, grange6merPlainDromeMinus, ignore.strand=TRUE)
intergerforTest<-subset(test, distance<=50)%>%countRnodeHits()
subset(grange6merPlainDromeMinus, intergerforTest)
intergerforTest<-subset(test, distance<=50)%>%countRnodeHits()
subset(grange6merPlainDromeMinus, intergerforTest)
intergerforTest
subset(test, distance<=50)
intergerforTest<-subset(test, distance<=0)%>%countRnodeHits()
intergerforTest<-subset(test, distance<=0)%>%countRnodeHits()
subset(grange6merPlainDromeMinus, intergerforTest)
intergerforTest<-subset(test, distance>=0 & distance<= 200 )%>%countRnodeHits()
intergerforTest<-subset(test, distance>=0 & distance<= 200 )%>%countRnodeHits()
subset(grange6merPlainDromeMinus, intergerforTest)
subset(test, distance>=0 & distance<= 200 )
intergerforTest<-subset(test, distance>0 & distance<= 200 )%>%countRnodeHits()
intergerforTest
intergerforTest<-subset(test, distance>0 & distance<= 200 )%>%countRnodeHits()
subset(grange6merPlainDromeMinus, intergerforTest)
grange6merPlus<-subset(grange6mer, strand=="+")
grange6merMinus<-subset(grange6mer, strand=="-")
intergerforTest<-subset(test, distance>0 & distance<= 200 )%>%countRnodeHits()
subset(grange6merPlainDromeMinus, intergerforTest)
grange6mer
arx6Mer <-
rbind(
A = c(0,0, 1, 1, 0, 0, 1),
C = c(0.33,0, 0, 0, 0, 0, 0),
G = c(0, 0, 0, 0, 0, 0, 0) ,
T = c(0.77,1, 0, 0, 1, 1, 0)
)
seqLogo::seqLogo(arx6Mer)
arx6Mer
arx6Mer <-
rbind(
A = c(0,0, 1, 1, 0, 0, 1),
C = c(0.33,0, 0, 0, 0, 0, 0),
G = c(0, 0, 0, 0, 0, 0, 0) ,
T = c(0.67,1, 0, 0, 1, 1, 0)
)
seqLogo::seqLogo(arx6Mer)
arx6Mer <-
rbind(
A = c(0,0, 1, 1, 0, 0, 1, 0.67),
C = c(0.33,0, 0, 0, 0, 0, 0, 0),
G = c(0, 0, 0, 0, 0, 0, 0, 0.33) ,
T = c(0.67,1, 0, 0, 1, 1, 0)
)
arx6Mer <-
rbind(
A = c(0, 0, 1, 1, 0, 0, 1, 0.67),
C = c(0.33, 0, 0, 0, 0, 0, 0, 0),
G = c(0, 0, 0, 0, 0, 0, 0, 0.33) ,
T = c(0.67,1, 0, 0, 1, 1, 0, 0)
)
seqLogo::seqLogo(arx6Mer)
grange6mer<-matchPWM(arx6Mer, BSgenome.Mmusculus.UCSC.mm9, "100%")
grange6mer
grange6merplaindrome
nonOverlappingMinusCisMotifs<-subset(grange6merPlainDromeMinus, intergerforTest)
nonOverlappingMinusTransClusters<-subset(grange6merPlainDromeMinus, intergerforTest)
transArxMotifs<-distanceToNearest(grange6merPlus, grange6merPlainDromeMinus, ignore.strand=TRUE)
intergerforTest<-subset(transArxMotifs, distance>0 & distance<= 200 )%>%countRnodeHits()
distanceToNearest(arx6Mer)
distanceToNearest(grange6mer)
cisArxMotifs<-distanceToNearest(grange6mer)
intergerforCis<-subset(cisArxMotifs, distance>0 & distance<=200)%>%countRnodeHits()
nonOverlappingCisClusters<-subset(grange6mer, intergerforCis)
nonOverlappingCisClusters
arx6Mer <-
rbind(
A = c(0, 0, 1, 1, 0, 0, 1),
C = c( 0, 0, 0, 0, 0, 0, 0),
G = c(0, 0, 0, 0, 0, 0, 0) ,
T = c(1, 0, 0, 1, 1, 0, 0)
)
seqLogo::seqLogo(arx6Mer)
arx6Mer
arx6Mer <-
rbind(
A = c( 0, 1, 1, 0, 0, 1),
C = c( 0, 0, 0, 0, 0, 0, 0),
G = c(0, 0, 0, 0, 0, 0, 0) ,
T = c(1, 0, 0, 1, 1, 0, 0)
)
seqLogo::seqLogo(arx6Mer)
arx6Mer
arx6Mer <-
rbind(
A = c( 0, 1, 1, 0, 0, 1),
C = c( 0, 0, 0, 0, 0, 0),
G = c(0, 0, 0, 0, 0, 0) ,
T = c(1, 0, 0, 1, 1, 0)
)
seqLogo::seqLogo(arx6Mer)
grange6mer<-matchPWM(arx6Mer, BSgenome.Mmusculus.UCSC.mm9, "100%")
cisArxMotifs<-distanceToNearest(grange6mer)
intergerforCis<-subset(cisArxMotifs, distance>0 & distance<=200)%>%countRnodeHits()
nonOverlappingCisClusters<-subset(grange6mer, intergerforCis)
nonOverlappingCisClusters
grange6mer
nonOverlappingCisClusters
UCSCgenes <- import("~/Scripts/March/mm9.bed")
promoters <- promoters(UCSCgenes)
promoters <- promoters(UCSCgenes)
distanceToNearest(cisArxMotifs, promoters)
promoters
promoters <- promoters(UCSCgenes)
promoters
UCSCgenes <- import("~/Scripts/March/mm9.bed")
promoters <- promoters(UCSCgenes)
promoters
?promoters
promoters <- promoters(UCSCgenes)
promoters
promoters <- promoters(UCSCgenes)
promoters
promoters
distanceToNearest(cisArxMotifs, promoters)
distanceToNearest(nonOverlappingCisClusters, promoters)
cisArxMotifs
distanceToNearest(nonOverlappingCisClusters, promoters)
distanceToNearest(nonOverlappingCisClusters, promoters)%>%as.data.frame()
ggplotCisPromoters<-distanceToNearest(nonOverlappingCisClusters, promoters)%>%as.data.frame()
ggplotTransPromoters<-distanceToNearest(nonOverlappingMinusTransClusters, promoters)%>%as.data.frame()
merge(ggplotCisPromoters[3], ggplotTransPromoters[3], by=0, all= TRUE)
ggplotTransPromoters
ggplotCisTrans<-merge(ggplotCisPromoters[3], ggplotTransPromoters[3], by=0, all= TRUE)
savehistory("~/Scripts/April/Saved R data/history.Rhistory")
